name: Discussion Room CI to ECR

on:
  push:
    branches:
      - main
    paths:
      - '**'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check directory structure
        run: |
          echo "현재 디렉토리 구조 확인:"
          pwd
          ls -la

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 879657431997.dkr.ecr.ap-northeast-2.amazonaws.com
          ECR_REPOSITORY: eum-debate-room
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # 디렉토리 구조 확인
          echo "현재 디렉토리:"
          pwd
          echo "파일 목록:"
          ls -la

          # Dockerfile 위치 확인
          if [ -f "Dockerfile" ]; then
            echo "루트 디렉토리에서 Dockerfile을 찾았습니다."
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          else
            echo "ERROR: Dockerfile을 찾을 수 없습니다!"
            find . -name "Dockerfile" | sort
            exit 1
          fi

          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Update Helm Chart Values
        env:
          ECR_REGISTRY: 879657431997.dkr.ecr.ap-northeast-2.amazonaws.com
          ECR_REPOSITORY: eum-debate-room
          IMAGE_TAG: ${{ github.sha }}
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          MANIFEST_REPO: ${{ secrets.MANIFEST_REPO }}
        run: |
          # 매니페스트 레포지토리 클론
          git clone https://${GIT_USERNAME}:${GIT_TOKEN}@${MANIFEST_REPO} manifest-repo

          # 클론한 레포지토리로 이동
          cd manifest-repo

          # Git 설정
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # helm-charts/eum-ai 디렉토리로 이동
          cd helm-charts/eum-ai || { echo "helm-charts/eum-ai 디렉토리가 없습니다"; exit 1; }

          # values.yaml 파일에서 discussionRoom 서비스의 이미지 태그 업데이트
          if [ -f "values.yaml" ]; then
            echo "values.yaml 파일 발견 - discussionRoom 이미지 태그 업데이트 중..."
            
            # yq를 사용하여 discussionRoom 서비스의 이미지 태그 업데이트
            yq eval ".services.discussionRoom.image.tag = \"${IMAGE_TAG}\"" -i values.yaml
            
            echo "업데이트된 discussionRoom 이미지 설정:"
            yq eval ".services.discussionRoom.image" values.yaml
          else
            echo "ERROR: values.yaml 파일을 찾을 수 없습니다!"
            exit 1
          fi

          # 변경사항 확인 및 커밋
          if git diff --quiet; then
            echo "변경 사항이 없어서 커밋하지 않습니다."
          else
            git add values.yaml
            git commit -m "Update discussionRoom image tag to ${IMAGE_TAG}"
            git push origin main
            echo "Helm 차트 업데이트 완료: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          fi
